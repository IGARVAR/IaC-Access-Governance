# IaC-Access-Governance

**Infrastructure-as-Code for Identity & Access Management**  
Governance-driven provisioning, ownership enforcement, and reporting for Active Directory and Microsoft Teams.

## Overview

This repository provides a curated collection of PowerShell automation tools to implement robust access governance through Infrastructure-as-Code (IaC). It is designed to support enterprises moving toward GitOps, Zero Trust, and least privilege models by enforcing declarative role structures and group metadata standards.

### Key Highlights:
- Declarative role provisioning via `roles.template.json` or `.yaml`
- GitOps-compatible workflows for AD and Teams sync
- Automated enforcement of `managedBy`, `description`, and classification attributes
- Identity audits based on user or group metadata
- Orphaned group detection and compliance tagging

---

## Primary Use Cases

- Provision ROLE/RES groups from structured role templates (JSON/YAML)
- Automate Microsoft Teams creation and metadata alignment with Active Directory
- Audit AD environments for unmanaged, untagged, or orphaned groups
- Sync GitHub or DevOps source-of-truth role files with M365/AD
- Trace all access paths for a user by UPN or email
- Reverse-map Teams to AD via `extensionAttribute11` linking

---

## File Structure

| Script | Description |
|--------|-------------|
| `IaC_OPER_Create_MS_Teams_with_RES_Group.ps1` | Creates a Microsoft Team and linked AD group with metadata tagging and ownership mapping. |
| `IaC_OPER_Bulk_Add_Users_to_Role.ps1` | Adds users in bulk to AD ROLE groups from validated CSV sources. |
| `IaC_OPER_GitHub_Teams_Group_Sync.ps1` | Syncs GitHub team membership to AD or M365 groups using IaC workflows. |
| `IaC_OPER_Set_ManagedBy_and_Metadata_From_Template.ps1` | Parses `roles.template.json` to assign `managedBy`, classification, and attributes to ROLE/RES groups. |
| `IaC_REPORT_ZeroTrust_Orphaned_AD_Groups.ps1` | Detects unmanaged and unused AD groups, flags candidates for decommissioning. |
| `IaC_REPORT_AD_Groups_ManagedBy.ps1` | Exports all groups with ownership metadata for compliance tracking. |
| `IaC_REPORT_User_Groups.ps1` | Returns all AD groups associated with a userâ€™s `samAccountName`. |
| `IaC_REPORT_User_Groups_By_Email.ps1` | Resolves group membership via email or UPN input. |
| `IaC_REPORT_MSTeams_ID_to_RES_Group.ps1` | Maps a Teams `GroupID` to a corresponding AD RES group using extension attributes. |
| `IaC_REPORT_SEQ_Groups_DisplayName_OU.ps1` | Filters and exports AD groups by naming convention and OU hierarchy. |

---

## Template Structure

Role templates are expected in the following structure:

```json
[
  {
    "GroupName": "ROLE_AD_ENGINEERING",
    "ManagedByUPN": "lead.eng@example.com",
    "Classification": "Confidential",
    "Sensitivity": "Internal"
  },
  {
    "GroupName": "RES_O365_TEAMS-MARKETING_MEMBER",
    "ManagedByUPN": "manager.marketing@example.com",
    "Classification": "Public",
    "Sensitivity": "External"
  }
]
