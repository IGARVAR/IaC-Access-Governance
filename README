# IaC-Access-Governance

**Infrastructure-as-Code for Identity & Access Management**  
Automated provisioning, ownership enforcement, and reporting for Active Directory and Microsoft Teams.

## Overview

This repository contains a set of PowerShell automation scripts designed to streamline access governance using Infrastructure-as-Code (IaC) principles. The tools in this collection help enforce ownership, ensure proper group provisioning, and align AD structures with Microsoft Teams deployments.

**Key Scenarios Covered:**
- Role-based access provisioning from structured data sources (CSV, Forms, email).
- Automated AD group creation and metadata tagging.
- Ownership mapping and gap reporting.
- Microsoft Teams â†” AD Group synchronization using extension attributes.
- Identity audits with UPN/email lookups.

## Use Cases

- Automate Microsoft Teams creation with corresponding AD groups and compliance tagging.
- Bulk assign users to role-based groups across environments.
- Identify orphaned or unmanaged AD groups by missing `managedBy`.
- Search all groups tied to specific users via UPN or export.
- Reverse-map Teams to RES/ROLE AD groups based on attributes.

## File Structure

| Script | Description |
|--------|-------------|
| `IAC_OPER_Create_MS_Teams_with_RES_Group.ps1` | Creates a Microsoft Team + matching AD group, auto-tags metadata, and links via extension attributes. |
| `IAC_OPER_Bulk_Add_Users_to_Role.ps1` | Bulk-assigns users to specified ROLE groups using validated CSV input. |
| `IAC_REPORT_AD_Groups_ManagedBy.ps1` | Exports all AD groups with `managedBy`, useful for ownership audits. |
| `IAC_REPORT_User_Groups.ps1` | Shows all groups a given user belongs to (input: samAccountName). |
| `IAC_REPORT_User_Groups_By_Email.ps1` | Same as above, but resolves user via email/UPN. |
| `IAC_REPORT_SamAccountNames_From_CSV.ps1` | Pulls samAccountName attributes for exported users to validate input data. |
| `IAC_REPORT_MSTeams_ID_to_RES_Group.ps1` | Maps a Teams GroupID (extensionAttribute11) to its corresponding AD group. |
| `IAC_REPORT_SEQ_Groups_DisplayName_OU.ps1` | Displays AD groups filtered by naming pattern and OU. |

## Author

**Ivan Garkusha**  
Cloud Systems Architect | Microsoft 365 & Azure Automation Specialist  
Atlanta, GA  
[LinkedIn](https://www.linkedin.com/in/ivangarkusha) | [GitHub](https://github.com/IvanGarkusha)

## Requirements

- PowerShell 5.1+ or Core
- RSAT for Active Directory
- MicrosoftTeams module (if Teams operations included)
- Proper permissions to read/write AD and Teams settings

## License

MIT License
